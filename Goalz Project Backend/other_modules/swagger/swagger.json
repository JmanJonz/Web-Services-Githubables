{
  "openapi": "3.0.0",
  "info": {
    "title": "Goalz App API",
    "description": "Access To Goalz App DB",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://goalz-project.onrender.com/"
    },
    {
      "url": "http://goalz-project.onrender.com/"
    }
  ],
  "paths": {
    "/Userz": {
      "post": {
        "tags": [
          "Userz"
        ],
        "description": "Post a new user",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userSchema"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Userz"
        ],
        "description": "Get all userz",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/Userz/{id}": {
      "get": {
        "tags": [
          "Userz"
        ],
        "description": "Get user by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "Userz"
        ],
        "description": "Replace a user by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userSchema"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Userz"
        ],
        "description": "Delete a user by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/goalz": {
      "post": {
        "tags": [
          "Goalz"
        ],
        "description": "Post a new goal",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/goalSchema"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Goalz"
        ],
        "description": "Get all goalz",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/goalz/{id}": {
      "get": {
        "tags": [
          "Goalz"
        ],
        "description": "Get goal by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "Goalz"
        ],
        "description": "Replace a goal by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/goalSchema"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Goalz"
        ],
        "description": "Delete a goal by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "goalSchema": {
        "type": "object",
        "properties": {
          "goalTitle": {
            "type": "string",
            "example": "Stop Picking Nose"
          },
          "startDate": {
            "type": "string",
            "example": "2023/9/30"
          },
          "completeByDate": {
            "type": "string",
            "example": "2024/7/30"
          },
          "belongsToValue": {
            "type": "string",
            "example": "family"
          },
          "urgentImportantRating": {
            "type": "number",
            "example": 7
          },
          "goalCompleted": {
            "type": "boolean",
            "example": false
          },
          "userEmail": {
            "type": "string",
            "example": "bogus@dumbmail.com"
          }
        }
      },
      "userSchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "bogus@dumbmail.com"
          },
          "password": {
            "type": "string",
            "example": "1234567"
          },
          "firstName": {
            "type": "string",
            "example": "Howard"
          },
          "lastName": {
            "type": "string",
            "example": "Chowski"
          }
        }
      }
    }
  }
}